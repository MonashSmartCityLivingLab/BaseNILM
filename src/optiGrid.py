#######################################################################################################################
#######################################################################################################################
# Title:        BaseNILM toolkit for energy disaggregation
# Topic:        Non-intrusive load monitoring utilising machine learning, pattern matching and source separation
# File:         optiGrid
# Date:         21.11.2023
# Author:       Dr. Pascal A. Schirmer
# Version:      V.0.2
# Copyright:    Pascal Schirmer
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
# Import libs
#######################################################################################################################
# ==============================================================================
# Internal
# ==============================================================================
from src.main import main

# ==============================================================================
# External
# ==============================================================================


#######################################################################################################################
# Function
#######################################################################################################################
def optiGrid(setupExp, setupDat, setupPar, setupMdl, setupPath):
    ###################################################################################################################
    # MSG IN
    ###################################################################################################################
    print("----------------------------------------------------------------------------------------------------------")
    print("----------------------------------------------------------------------------------------------------------")
    print("Welcome to BaseNILM: A toolkit for energy disaggregation")
    print("Mode:       Optimising Grid")
    print("Author:     Dr. Pascal A. Schirmer")
    print("Copyright:  Pascal Schirmer")
    print("Version:    v.0.2")
    print("Date:       21.11.2023")
    print("----------------------------------------------------------------------------------------------------------")
    print("----------------------------------------------------------------------------------------------------------")
    print("\n\n")

    ###################################################################################################################
    # Initialisation
    ###################################################################################################################
    setupExp['nameInit'] = setupExp['name']
    setupPar['optPara1'] = [4, 8, 16, 32, 64]
    setupPar['optPara2'] = [1/60, 1/300, 1/600, 1/900, 1/1800, 1/3600]
    setupPar['optACC'] = 3                                                                                              # 0) ACC, 1) F1, 2) R2, 3) TECA, 4) RMSE, 5) MAE, 6) Max, 7) Pred 8) Grt 9) All

    ###################################################################################################################
    # Calculation
    ###################################################################################################################
    for i in range(0, len(setupPar['optPara1'])):
        for ii in range(0, len(setupPar['optPara2'])):
            # ==============================================================================
            # Init
            # ==============================================================================
            setupExp['name'] = setupExp['nameInit'] + '_Grid' + str(i) + str(ii)
            setupExp['save'] = 1

            # ==============================================================================
            # Select Parameter
            # ==============================================================================
            setupPar['window'] = setupPar['optPara1'][i]
            setupPar['overlap'] = setupPar['window'] - 1
            setupPar['yFocus'] = setupPar['window']/2
            setupDat['fs'] = setupPar['optPara2'][ii]

            # ==============================================================================
            # Calculation
            # ==============================================================================
            main(setupExp, setupDat, setupPar, setupMdl, setupPath)
